{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-13T12:41:15.932Z",
    "end": "2022-12-13T12:41:33.541Z",
    "duration": 17609,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5ef50929-3428-4428-b498-b1bd8f219e98",
      "title": "",
      "fullFile": "cypress/e2e/firstTest.spec.js",
      "file": "cypress/e2e/firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "101f7c3b-5bf2-48e8-9361-b5653c4c980f",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 3825,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// intercept the api call when the publish article button is selected.\ncy.intercept('POST', Cypress.env('apiUrl') + '/api/articles/').as('postArticles'); // script to create a new article\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('Christmas Title 2022');\ncy.get('[formcontrolname=\"description\"]').type('horses for courses');\ncy.get('[formcontrolname=\"body\"]').type('in 2022');\ncy.get('[placeholder=\"Enter tags\"]').type('#learning');\ncy.contains('Publish Article').click();\ncy.wait(500); // force Cypress to wait for the api call to complete before we start looking into it.\ncy.wait('@postArticles').then(xhr => {\n  // asert the xhr obj which contains all the info related to the api call which has the request/repsonse obj.\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('in 2022');\n  expect(xhr.response.body.article.description).to.equal('horses for courses');\n}); // Delete the article to allow the user to run this test again without error",
              "err": {},
              "uuid": "cec0d9de-cbf9-431a-9a6d-fa1da531b387",
              "parentUUID": "101f7c3b-5bf2-48e8-9361-b5653c4c980f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete first global article",
              "fullTitle": "Test with backend Delete first global article",
              "timedOut": null,
              "duration": 2732,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Global Feed').click();\ncy.get('.article-preview').first().click();\ncy.get('.article-actions').contains('Delete Article').click();",
              "err": {},
              "uuid": "6fc9b615-0990-452a-af4a-be7c3bd059e6",
              "parentUUID": "101f7c3b-5bf2-48e8-9361-b5653c4c980f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modyfing the req and resp",
              "fullTitle": "Test with backend intercepting and modyfing the req and resp",
              "timedOut": null,
              "duration": 2977,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// intercept the api call when the publish article button is selected.\n// cy.intercept('POST', 'https://api.realworld.io/api/articles/', (req) =>{\n//     req.body.article.description = \"horses for courses 2\"\n// }).as('postArticles')\n// intercept response from the server\ncy.intercept('POST', Cypress.env('apiUrl') + '/api/articles/', req => {\n  req.reply(res => {\n    //assert response is as expected\n    expect(res.body.article.description).to.equal('This is a description'); // after verifying response, send the modified res and back to the browser\n    res.body.article.description = \"intercepted description\";\n  });\n}).as('postArticles'); // script to create a new article\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('Why the long face 321');\ncy.get('[formcontrolname=\"description\"]').type('This is a description');\ncy.get('[formcontrolname=\"body\"]').type('Angular is awesome'); // cy.get('[placeholder=\"Enter tags\"]').type('#learning')\ncy.contains('Publish Article').click(); // force Cypress to wait for the api call to complete before we start looking into it.\ncy.wait('@postArticles').then(xhr => {\n  // assert the xhr obj which contains all the info related to the api call which has the request/repsonse obj.\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('Angular is awesome');\n  expect(xhr.response.body.article.description).to.equal(\"intercepted description\");\n});",
              "err": {},
              "uuid": "b768eb76-aa9a-495a-90cd-d54b914e989c",
              "parentUUID": "101f7c3b-5bf2-48e8-9361-b5653c4c980f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete first global article",
              "fullTitle": "Test with backend Delete first global article",
              "timedOut": null,
              "duration": 2565,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Global Feed').click();\ncy.get('.article-preview').first().click();\ncy.get('.article-actions').contains('Delete Article').click();",
              "err": {},
              "uuid": "b02bfe30-1b38-4e36-b897-2d6ff01c1684",
              "parentUUID": "101f7c3b-5bf2-48e8-9361-b5653c4c980f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify popular tags are displayed",
              "fullTitle": "Test with backend verify popular tags are displayed",
              "timedOut": null,
              "duration": 1197,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('we logged in'); // add assertion to ensure the tags.json file contents have been injected into the api response\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing').and('contain', 'creative').and('contain', 'production').and('contain', 'staging');",
              "err": {},
              "uuid": "8f293c82-3089-4fd0-b7cd-cd607bb9224d",
              "parentUUID": "101f7c3b-5bf2-48e8-9361-b5653c4c980f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1226,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', Cypress.env('apiUrl') + '/api/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n}); // add the mock articles.json as a stub response to the api call\ncy.intercept('GET', Cypress.env('apiUrl') + '/api/articles*', {\n  fixture: 'articles.json'\n}); // click on the global feed\ncy.contains('Global Feed').click(); // return a list of buttons\ncy.get('app-article-list button').then(heartList => {\n  expect(heartList[0]).to.contain('3');\n  expect(heartList[1]).to.contain('5');\n});\ncy.fixture('articles.json').then(file => {\n  const articleLink = file.articles[1].slug;\n  file.articles[1].favoritesCount = 6; // intercept favourite api call to provide our own mock response\n  cy.intercept('POST', Cypress.env('apiUrl') + '/api/articles/' + articleLink + '/favorite', file);\n  cy.get('app-article-list button').eq(1).click().should('contain', '6');\n});",
              "err": {},
              "uuid": "1854d100-db8d-4296-8f72-461a04fb6d1c",
              "parentUUID": "101f7c3b-5bf2-48e8-9361-b5653c4c980f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 2954,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Api request 0.21\",\n    \"description\": \"Hackathon 2022\",\n    \"body\": \"Angular is awesome\"\n  }\n}; // get access token using api request\ncy.get('@token').then(token => {\n  // post request to create a new article\n  // provide the obj as a param for the cy request\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles/?',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    // grab the access token from the 1st request\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); // verify article was successfully deleted\n  // need to provide auth token again, use obj again \n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    // console.log(body)\n    expect(body.articles[0].title).not.to.equal('Api request 0.21');\n  });\n});",
              "err": {},
              "uuid": "b789c0fa-9397-4b19-a360-e8dbe542fc2e",
              "parentUUID": "101f7c3b-5bf2-48e8-9361-b5653c4c980f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cec0d9de-cbf9-431a-9a6d-fa1da531b387",
            "6fc9b615-0990-452a-af4a-be7c3bd059e6",
            "b768eb76-aa9a-495a-90cd-d54b914e989c",
            "b02bfe30-1b38-4e36-b897-2d6ff01c1684",
            "8f293c82-3089-4fd0-b7cd-cd607bb9224d",
            "1854d100-db8d-4296-8f72-461a04fb6d1c",
            "b789c0fa-9397-4b19-a360-e8dbe542fc2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17476,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}